{"version":3,"sources":["actions/index.js","components/PhotoCard/PhotoCard.js","utils/helperFunctions.js","components/PhotoGallery/PhotoGallery.js","components/HomePage/HomePage.js","components/Header/HeaderStyles.js","components/Header/Header.js","utils/theme.js","components/HomePage/HomePageStyles.js","App.js","serviceWorker.js","reducer/rootReducer.js","index.js"],"names":["setDate","date","type","payload","useStyles","makeStyles","root","maxWidth","media","height","PhotoCard","props","classes","dispatch","useDispatch","title","explanation","url","Card","className","CardActionArea","onClick","window","scrollTo","top","left","behavior","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","color","moment","require","arrOfPhotoInfo","PhotoGallery","useEffect","day","Date","DateLastThirtyDays","i","push","format","subtract","getDateLastThirtyDays","forEach","fetch","then","res","ok","Error","json","result","catch","error","console","Grid","container","justify","spacing","map","item","key","code","xs","sm","md","xl","HomePage","choosenDate","useSelector","state","useState","mainImage","setMainImage","status","previous","getPreviousDay","aspectRatio","imageStyle","width","maxHeight","transparent","style","marginBottom","src","pageTitle","display","Header","localStorage","setItem","JSON","stringify","AppBar","Toolbar","utils","DateFnsUtils","Box","noWrap","disableToolbar","margin","id","label","disableFuture","value","onChange","darkThemeProperties","palette","primary","main","padding","App","darkTheme","createMuiTheme","responsiveFontSizes","ThemeProvider","theme","lg","Boolean","location","hostname","match","initialState","parse","getItem","rootReducer","action","store","createStore","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.51f6670f.chunk.js","sourcesContent":["export const SET_DATE = \"SET_DATE\";\r\n\r\nexport const setDate = (date) => ({\r\n\ttype: SET_DATE,\r\n\tpayload: date,\r\n});\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n\tCard,\r\n\tCardActionArea,\r\n\tCardContent,\r\n\tCardMedia,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {setDate} from \"../../actions\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmaxWidth: 345,\r\n\t},\r\n\tmedia: {\r\n\t\theight: 140,\r\n\t},\r\n});\r\n\r\nfunction PhotoCard(props) {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleChoosePhoto = () => {\r\n\t\tdispatch(setDate(date));\r\n\t\twindow.scrollTo({top: 0, left: 0, behavior: \"smooth\"});\r\n\t};\r\n\r\n\tconst {title, explanation, url, date} = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardActionArea onClick={handleChoosePhoto}>\r\n\t\t\t\t\t<CardMedia className={classes.media} image={url} title={title} />\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\t\t{explanation}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</CardActionArea>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default PhotoCard;\r\n","const moment = require(\"moment\");\r\n\r\nexport const getPreviousDay = (date) => {\r\n\tconst previous = moment(date).subtract(1, \"days\");\r\n\treturn moment(previous).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const getDateLastThirtyDays = () => {\r\n\tlet day = new Date();\r\n\tconst DateLastThirtyDays = [];\r\n\tfor (let i = 0; i < 30; i++) {\r\n\t\tDateLastThirtyDays.push(moment(day).format(\"YYYY-MM-DD\"));\r\n\t\tday = moment(day).subtract(1, \"days\");\r\n\t}\r\n\treturn DateLastThirtyDays;\r\n};\r\n","import React, {useEffect} from \"react\";\r\n\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nimport PhotoCard from \"../PhotoCard/PhotoCard\";\r\n\r\nimport {getDateLastThirtyDays} from \"../../utils/helperFunctions\";\r\n\r\nconst arrOfPhotoInfo = [];\r\n\r\nfunction PhotoGallery() {\r\n\tuseEffect(() => {\r\n\t\tgetDateLastThirtyDays().forEach((date) => {\r\n\t\t\tfetch(\r\n\t\t\t\t`https://api.nasa.gov/planetary/apod?date=${date}&api_key=wAPiFsefOy4RQSsHYgWPXReZA2k4GnpNF3hkg33o`\r\n\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (!res.ok) {\r\n\t\t\t\t\t\tthrow new Error(\"Network response was not ok\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn res.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tarrOfPhotoInfo.push(result);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.error(\"Error:\", error);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container justify=\"center\" spacing={4}>\r\n\t\t\t\t{arrOfPhotoInfo.map((item, key) =>\r\n\t\t\t\t\titem.code !== 400 && item[\"media_type\"] === \"image\" ? (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\txl={3}\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PhotoCard\r\n\t\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\t\texplanation={item.explanation}\r\n\t\t\t\t\t\t\t\turl={item.url}\r\n\t\t\t\t\t\t\t\tdate={item.date}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : null\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default PhotoGallery;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\nimport Image from \"material-ui-image\";\r\nimport {transparent} from \"material-ui/styles/colors\";\r\n\r\nimport PhotoGallery from \"../PhotoGallery/PhotoGallery\";\r\nimport {setDate} from \"../../actions\";\r\n\r\nimport {getPreviousDay} from \"../../utils/helperFunctions\";\r\n\r\nfunction HomePage() {\r\n\tconst dispatch = useDispatch();\r\n\tconst choosenDate = useSelector((state) => state);\r\n\r\n\tconst [mainImage, setMainImage] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\r\n\t\t\t`https://api.nasa.gov/planetary/apod?date=${choosenDate}&api_key=wAPiFsefOy4RQSsHYgWPXReZA2k4GnpNF3hkg33o`\r\n\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (!res.ok) {\r\n\t\t\t\t\tif (res.status === 404) {\r\n\t\t\t\t\t\tdispatch(setDate(getPreviousDay(choosenDate)));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new Error(\"Network response was not ok\");\r\n\t\t\t\t}\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetMainImage(result.url);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(\"Error:\", error);\r\n\t\t\t});\r\n\t}, [choosenDate]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Image\r\n\t\t\t\taspectRatio={16 / 9}\r\n\t\t\t\timageStyle={{width: \"100%\", height: \"auto\", maxHeight: \"100%\"}}\r\n\t\t\t\tcolor={transparent}\r\n\t\t\t\tstyle={{marginBottom: \"2rem\"}}\r\n\t\t\t\tsrc={mainImage}\r\n\t\t\t/>\r\n\t\t\t)\r\n\t\t\t<PhotoGallery />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default HomePage;\r\n","import {makeStyles} from \"@material-ui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n\troot: {\r\n\t\t\"& > *:first-child\": {\r\n\t\t\t\"justify-content\": \" space-between\",\r\n\t\t},\r\n\t},\r\n\tpageTitle: {\r\n\t\tdisplay: \"flex\",\r\n\t\t\"justify-content\": \"space-around\",\r\n\t\t\"align-items\": \"center\",\r\n\t\twidth: \"6rem\",\r\n\t},\r\n});\r\n","import \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppBar, Toolbar, Typography, Box} from \"@material-ui/core\";\r\n\r\nimport {\r\n\tMuiPickersUtilsProvider,\r\n\tKeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\n\r\nimport {setDate} from \"../../actions\";\r\nimport {useStyles} from \"./HeaderStyles\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nfunction Header() {\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = useStyles();\r\n\r\n\tconst choosenDate = useSelector((state) => state);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (choosenDate !== moment(new Date()).format(\"YYYY-MM-DD\"))\r\n\t\t\tlocalStorage.setItem(\"choosenDate\", JSON.stringify(choosenDate));\r\n\t}, [choosenDate]);\r\n\r\n\tconst handleChoosenDate = (choosenDate) => {\r\n\t\tconst date = moment(choosenDate).format(\"YYYY-MM-DD\");\r\n\t\tdispatch(setDate(date));\r\n\t\twindow.scrollTo({top: 0, left: 0, behavior: \"smooth\"});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AppBar className={classes.root}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t<Box className={classes.pageTitle}>\r\n\t\t\t\t\t\t<InstagramIcon />\r\n\t\t\t\t\t\t<Typography variant=\"h6\" noWrap>\r\n\t\t\t\t\t\t\tNASA\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\tformat=\"MM/dd/yyyy\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tid=\"date-picker-inline\"\r\n\t\t\t\t\t\tlabel=\"Choose date\"\r\n\t\t\t\t\t\tdisableFuture\r\n\t\t\t\t\t\tvalue={choosenDate}\r\n\t\t\t\t\t\tonChange={handleChoosenDate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","const darkThemeProperties = {\r\n\tpalette: {\r\n\t\ttype: \"dark\",\r\n\t\tprimary: {\r\n\t\t\tmain: \"#333333\",\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport {darkThemeProperties};\r\n","import {makeStyles} from \"@material-ui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n\troot: {\r\n\t\tpadding: \"5rem 1rem 0\",\r\n\t},\r\n});\r\n","import React from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nimport HomePage from \"./components/HomePage/HomePage\";\nimport Header from \"./components/Header/Header\";\n\nimport {\n\tThemeProvider,\n\tcreateMuiTheme,\n\tresponsiveFontSizes,\n} from \"@material-ui/core/styles\";\nimport {darkThemeProperties} from \"./utils/theme\";\n\nimport {useStyles} from \"./components/HomePage/HomePageStyles\";\n\nfunction App() {\n\tconst classes = useStyles();\n\tlet darkTheme = createMuiTheme(darkThemeProperties);\n\tdarkTheme = responsiveFontSizes(darkTheme);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={darkTheme}>\n\t\t\t\t<Header />\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={false} lg={1} />\n\t\t\t\t\t<Grid item xs={12} lg={10} className={classes.root}>\n\t\t\t\t\t\t<HomePage />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={false} lg={1} />\n\t\t\t\t</Grid>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_DATE} from \"../actions\";\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst initialState =\r\n\tJSON.parse(localStorage.getItem(\"choosenDate\")) ||\r\n\tmoment(new Date()).format(\"YYYY-MM-DD\");\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_DATE:\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport rootReducer from \"./reducer/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.Fragment>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}